spring:
  boot:
    admin:
      client:
        enabled: false
  security:
    oauth2:
      client:
        provider: # Предоставляют ключи доступа
          keycloak:
            issuer-uri: http://localhost:8082/realms/selmag
            user-name-attribute: preferred_username
        registration: # Регистрация клиента
          keycloak:
            client-id: customer-app
            client-secret: n7WXKmPrGMbgTkcMso3Mv5nDPFtlfsRs
            scope:
              - openid
              - view_catalogue
              - microprofile-jwt
          metrics:
            provider: keycloak
            client-id: customer-app-metrics-client
            client-secret: SJX6F1VssI9lNT2Ds1XTxv6dC6vGjK0q
            authorization-grant-type: client_credentials
            scope:
              - metrics_server
          discovery:
            provider: keycloak
            client-id: customer-app
            client-secret: n7WXKmPrGMbgTkcMso3Mv5nDPFtlfsRs
            authorization-grant-type: client_credentials
            scope:
              - discovery
      resourceserver:
        jwt:
#          issuer-uri: http://localhost:8082/realms/selmag
          jwk-set-uri: http://localhost:8082/realms/selmag/protocol/openid-connect/certs
          # Отключаем iss проверку, потому что host должен быть одинаковый, это не возможно с docker
          # docker http://host.docker.internal:8082

selmag:
  services:
    catalogue:
      uri: lb://catalogue-service
    feedback:
      uri: lb://feedback-service

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true